C51 COMPILER V9.54   IIC                                                                   04/30/2020 01:44:06 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN IIC.OBJ
COMPILER INVOKED BY: D:\MDK\C51\BIN\C51.EXE IIC.c LARGE OPTIMIZE(8,SPEED) BROWSE MODP2 DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "IIC.h"
   2          #include <INTRINS.H>
   3          /*******************************************************************************
   4          * 函 数 名         : I2C_Delay()
   5          * 函数功能       : 延时
   6          * 输    入         : 无
   7          * 输    出         : 无
   8          *******************************************************************************/
   9          void I2C_Delay()
  10          {
  11   1        unsigned char i;
  12   1        _nop_();
  13   1        _nop_();
  14   1        _nop_();
  15   1        i = 10;
  16   1        while (--i);
  17   1      }
  18          /*******************************************************************************
  19          * 函 数 名         : I2C_Start()
  20          * 函数功能       : 起始信号：在I2C_SCL时钟信号在高电平期间I2C_SDA信号产生一个下降沿
  21          * 输    入         : 无
  22          * 输    出         : 无
  23          * 备    注         : 起始之后I2C_SDA和I2C_SCL都为0
  24          *******************************************************************************/
  25          void I2C_Start()
  26          {
  27   1          I2C_SDA = 1;                    //拉高数据线
  28   1      //    I2C_Delay10us();                 //延时
  29   1          I2C_SCL = 1;                    //拉高时钟线
  30   1          I2C_Delay();                 //延时
  31   1          I2C_SDA = 0;                    //产生下降沿
  32   1          I2C_Delay();                 //延时
  33   1          I2C_SCL = 0;                    //拉低时钟线
  34   1          I2C_Delay();                 //延时
  35   1      }
  36          
  37          /*******************************************************************************
  38          * 函 数 名           : I2C_Stop()
  39          * 函数功能           : 终止信号：在I2C_SCL时钟信号高电平期间I2C_SDA信号产生一个上升沿
  40          * 输    入           : 无
  41          * 输    出           : 无
  42          * 备    注           : 结束之后保持I2C_SDA和I2C_SCL都为1；表示总线空闲
  43          *******************************************************************************/
  44          void I2C_Stop()
  45          {
  46   1          I2C_SDA = 0;                 //拉低数据线
  47   1      //  I2C_Delay();               //延时
  48   1          I2C_SCL = 1;                 //拉高时钟线
  49   1          I2C_Delay();             //延时
  50   1          I2C_SDA = 1;                 //产生上升沿
  51   1          I2C_Delay();             //延时 
  52   1      }
  53          
  54          //**************************************
  55          //I2C发送应答信号
C51 COMPILER V9.54   IIC                                                                   04/30/2020 01:44:06 PAGE 2   

  56          //入口参数:ack (0:ACK 1:NAK)
  57          //**************************************
  58          void I2C_SendACK(bit ack)
  59          {
  60   1          I2C_SDA = ack;                  //写应答信号
  61   1          I2C_SCL = 1;                    //拉高时钟线
  62   1          I2C_Delay();                 //延时
  63   1          I2C_SCL = 0;                    //拉低时钟线
  64   1          I2C_Delay();                 //延时
  65   1      }
  66          
  67          //**************************************
  68          //I2C接收应答信号
  69          //**************************************
  70          bit I2C_RecvACK()
  71          {
  72   1          I2C_SCL = 1;                //拉高时钟线
  73   1          I2C_Delay();            //延时
  74   1          CY = I2C_SDA;                   //读应答信号
  75   1          I2C_SCL = 0;                //拉低时钟线
  76   1          I2C_Delay();            //延时
  77   1          return CY;
  78   1      }
  79          
  80          /*******************************************************************************
  81          * 函 数 名           : I2cSendByte(uchar num)
  82          * 函数功能           : 通过I2C发送一个字节。在I2C_SCL时钟信号高电平期间，
  83          *                    * 保持发送信号I2C_SDA保持稳定
  84          * 输    入           : num ,ack
  85          * 输    出           : 0或1。发送成功返回1，发送失败返回0
  86          * 备    注           : 发送完一个字节I2C_SCL=0, 需要应答则应答设置为1，否则为0
  87          *******************************************************************************/
  88          void I2C_SendByte(uchar dat)
  89          {
  90   1          uchar i;
  91   1          for (i=0; i<8; i++)         //8位计数器
  92   1          {
  93   2              I2C_SDA = dat >> 7;               //送数据口
  94   2              dat <<= 1;              //移出数据的最高位
  95   2              I2C_SCL = 1;                //拉高时钟线
  96   2              I2C_Delay();             //延时
  97   2              I2C_SCL = 0;                //拉低时钟线
  98   2              I2C_Delay();             //延时
  99   2          }
 100   1          I2C_RecvACK();
 101   1          
 102   1      /*********也可以用下面的代码*******/
 103   1      //    uchar i;
 104   1      //    for (i=0; i<8; i++)         //8位计数器
 105   1      //    {
 106   1      //        dat <<= 1;              //移出数据的最高位
 107   1      //        I2C_SDA = CY;               //送数据口
 108   1      //        I2C_SCL = 1;                //拉高时钟线
 109   1      //        I2C_Delay();             //延时
 110   1      //        I2C_SCL = 0;                //拉低时钟线
 111   1      //        I2C_Delay();             //延时
 112   1      //    }
 113   1      //    I2C_RecvACK();
 114   1      }
 115          
 116          /*******************************************************************************
 117          * 函 数 名           : I2cReadByte()
C51 COMPILER V9.54   IIC                                                                   04/30/2020 01:44:06 PAGE 3   

 118          * 函数功能         : 使用I2c读取一个字节
 119          * 输    入           : 无
 120          * 输    出           : dat
 121          * 备    注           : 接收完一个字节I2C_SCL=0
 122          *******************************************************************************/
 123          uchar I2C_ReadByte()
 124          {
 125   1          uchar i;
 126   1          uchar dat = 0;
 127   1          I2C_SDA = 1;                    //使能内部上拉,准备读取数据
 128   1      //    I2C_Delay();             //延时
 129   1          for (i=0; i<8; i++)         //8位计数器
 130   1          {
 131   2              dat <<= 1;
 132   2              I2C_SCL = 1;                //拉高时钟线
 133   2              I2C_Delay();             //延时
 134   2              dat |= I2C_SDA;             //读数据               
 135   2              I2C_SCL = 0;                //拉低时钟线
 136   2              I2C_Delay();             //延时
 137   2          }
 138   1          return dat; 
 139   1      }
 140          
 141          //**************************************
 142          //指定地址下写入数据
 143          //**************************************
 144          void WriteI2C(uchar SlaveAddress,uchar REG_Address,uchar REG_data)
 145          {
 146   1          I2C_Start();                  //发送起始型信号
 147   1          I2C_SendByte(SlaveAddress);   //发送设备地址
 148   1          I2C_SendByte(REG_Address);    //发送寄存器地址
 149   1          I2C_SendByte(REG_data);       //发送写入的数据
 150   1          I2C_Stop();                   //终止信号
 151   1      }
 152          
 153          //**************************************
 154          //获取指定地址下的数据
 155          //**************************************
 156          uchar ReadI2C(uchar SlaveAddress,uchar REG_Address)//获取指定地址下的数据
 157          {
 158   1        uchar REG_data;
 159   1        I2C_Start();                   //发送起始型信号
 160   1        I2C_SendByte(SlaveAddress);    //发送设备地址
 161   1        I2C_SendByte(REG_Address);     //发送寄存器地址
 162   1        I2C_Start();                   //发送起始型信号
 163   1        I2C_SendByte(SlaveAddress|0x01);  //发送设备地址
 164   1        REG_data = I2C_ReadByte();       //
 165   1        I2C_SendACK(1);                //发送应答信号
 166   1        I2C_Stop();                    //终止信号
 167   1        return REG_data;
 168   1      }
 169          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    189    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
C51 COMPILER V9.54   IIC                                                                   04/30/2020 01:44:06 PAGE 4   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
